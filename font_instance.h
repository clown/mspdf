/* ------------------------------------------------------------------------- */
/*
 *  font_instance.h
 *
 *  Copyright (c) 2009, Four and More. All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *
 *    - Redistributions of source code must retain the above copyright
 *      notice, this list of conditions and the following disclaimer.
 *    - Redistributions in binary form must reproduce the above copyright
 *      notice, this list of conditions and the following disclaimer in the
 *      documentation and/or other materials provided with the distribution.
 *    - No names of its contributors may be used to endorse or promote
 *      products derived from this software without specific prior written
 *      permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 *  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 *  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 *  TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 *  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 *  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 *  Last-modified: Wed 16 Jun 2009 15:34:00 JST
 */
/* ------------------------------------------------------------------------- */
#ifndef FAML_PDF_FONT_INSTANCE_H
#define FAML_PDF_FONT_INSTANCE_H

#include <string>
#include <map>
#include "clx/literal.h"
#include "clx/utility.h"
#include "font_property.h"

namespace faml {
	namespace pdf {
		/* ----------------------------------------------------------------- */
		/*
		 *  fw1
		 *
		 *  Type1 のフォント群の横幅一覧．
		 *  Type1 の場合，ASCII コードに対応する横幅を表す (0 -- 255)．
		 */
		/* ----------------------------------------------------------------- */
		namespace fw1 { // font width (Type1 fonts)
			static const int courier[256] = {
				 600,  600,  600,  600,  600,  600,  600,  600,  600,  600,
				 600,  600,  600,  600,  600,  600,  600,  600,  600,  600,
				 600,  600,  600,  600,  600,  600,  600,  600,  600,  600,
				 600,  600,  600,  600,  600,  600,  600,  600,  600,  600,
				 600,  600,  600,  600,  600,  600,  600,  600,  600,  600,
				 600,  600,  600,  600,  600,  600,  600,  600,  600,  600,
				 600,  600,  600,  600,  600,  600,  600,  600,  600,  600,
				 600,  600,  600,  600,  600,  600,  600,  600,  600,  600,
				 600,  600,  600,  600,  600,  600,  600,  600,  600,  600,
				 600,  600,  600,  600,  600,  600,  600,  600,  600,  600,
				 600,  600,  600,  600,  600,  600,  600,  600,  600,  600,
				 600,  600,  600,  600,  600,  600,  600,  600,  600,  600,
				 600,  600,  600,  600,  600,  600,  600,  600,  600,  600,
				 600,  600,  600,  600,  600,  600,  600,  600,  600,  600,
				 600,  600,  600,  600,  600,  600,  600,  600,  600,  600,
				 600,  600,  600,  600,  600,  600,  600,  600,  600,  600,
				 600,  600,  600,  600,  600,  600,  600,  600,  600,  600,
				 600,  600,  600,  600,  600,  600,  600,  600,  600,  600,
				 600,  600,  600,  600,  600,  600,  600,  600,  600,  600,
				 600,  600,  600,  600,  600,  600,  600,  600,  600,  600,
				 600,  600,  600,  600,  600,  600,  600,  600,  600,  600,
				 600,  600,  600,  600,  600,  600,  600,  600,  600,  600,
				 600,  600,  600,  600,  600,  600,  600,  600,  600,  600,
				 600,  600,  600,  600,  600,  600,  600,  600,  600,  600,
				 600,  600,  600,  600,  600,  600,  600,  600,  600,  600,
				 600,  600,  600,  600,  600,  600
			};
			
			static const int helvetica[256] = {
				   0,    0,    0,    0,    0,    0,    0,    0,    0,  278,
				   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
				   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
				   0,    0,  278,  278,  355,  556,  556,  889,  667,  222,
				 333,  333,  389,  584,  278,  333,  278,  278,  556,  556,
				 556,  556,  556,  556,  556,  556,  556,  556,  278,  278,
				 584,  584,  584,  556, 1015,  667,  667,  722,  722,  667,
				 611,  778,  722,  278,  500,  667,  556,  833,  722,  778,
				 667,  778,  722,  667,  611,  722,  667,  944,  667,  667,
				 611,  278,  278,  278,  469,  556,  222,  556,  556,  500,
				 556,  556,  278,  556,  556,  222,  222,  500,  222,  833,
				 556,  556,  556,  556,  333,  500,  278,  556,  500,  722,
				 500,  500,  500,  334,  260,  334,  584,    0,    0,    0,
				   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
				   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
				   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
				   0,  333,  556,  556,  167,  556,  556,  556,  556,  191,
				 333,  556,  333,  333,  500,  500,    0,  556,  556,  556,
				 278,    0,  537,  350,  222,  333,  333,  556, 1000, 1000,
				   0,  611,    0,  333,  333,  333,  333,  333,  333,  333,
				 333,    0,  333,  333,    0,  333,  333,  333, 1000,    0,
				   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
				   0,    0,    0,    0,    0, 1000,    0,  370,    0,    0,
				   0,    0,  556,  778, 1000,  365,    0,    0,    0,    0,
				   0,  889,    0,    0,    0,  278,    0,    0,  222,  611,
				 944,  611,    0,    0,    0,    0
			};
			
			static const int times[256] = {
				   0,    0,    0,    0,    0,    0,    0,    0,    0,  250,
				   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
				   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
				   0,    0,  250,  333,  555,  500,  500, 1000,  833,  333,
				 333,  333,  500,  570,  250,  333,  250,  278,  500,  500,
				 500,  500,  500,  500,  500,  500,  500,  500,  333,  333,
				 570,  570,  570,  500,  930,  722,  667,  722,  722,  667,
				 611,  778,  778,  389,  500,  778,  667,  944,  722,  778,
				 611,  778,  722,  556,  667,  722,  722, 1000,  722,  722,
				 667,  333,  278,  333,  581,  500,  333,  500,  556,  444,
				 556,  444,  333,  500,  556,  278,  333,  556,  278,  833,
				 556,  500,  556,  556,  444,  389,  333,  556,  500,  722,
				 500,  500,  444,  394,  220,  394,  524,    0,    0,    0,
				   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
				   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
				   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
				   0,  333,  500,  500,  167,  500,  500,  500,  500,  278,
				 500,  500,  333,  333,  556,  556,    0,  500,  500,  500,
				 250,    0,  540,  350,  333,  500,  500,  500, 1000, 1000,
				   0,  500,    0,  333,  333,  333,  333,  333,  333,  333,
				 333,    0,  333,  333,    0,  333,  333,  333, 1000,    0,
				   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
				   0,    0,    0,    0,    0, 1000,    0,  300,    0,    0,
				   0,    0,  667,  778, 1000,  330,    0,    0,    0,    0,
				   0,  722,    0,    0,    0,  278,    0,    0,  278,  500,
				 722,  556,    0,    0,    0,    0
			};
			
#ifdef FAML_USE_WIN32_FONTS
			
			static const int arial[256] = {
				   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
				   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
				   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
				   0,    0,  277,  277,  354,  556,  556,  889,  666,  190,
				 333,  333,  389,  583,  277,  333,  277,  277,  556,  556,
				 556,  556,  556,  556,  556,  556,  556,  556,  277,  277,
				 583,  583,  583,  556, 1015,  666,  666,  722,  722,  666,
				 610,  777,  722,  277,  500,  666,  556,  833,  722,  777,
				 666,  777,  722,  666,  610,  722,  666,  943,  666,  666,
				 610,  277,  277,  277,  469,  556,  333,  556,  556,  500,
				 556,  556,  277,  556,  556,  222,  222,  500,  222,  833,
				 556,  556,  556,  556,  333,  500,  277,  556,  500,  722,
				 500,  500,  500,  333,  259,  333,  583,  277,  556,  277,
				 222,  556,  333, 1000,  556,  556,  333, 1000,  666,  333,
				1000,  277,  610,  277,  277,  222,  222,  333,  333,  350,
				 556, 1000,  333, 1000,  500,  333,  943,  277,  500,  666,
				 277,  333,  556,  556,  556,  556,  259,  556,  333,  736,
				 370,  556,  583,  277,  736,  552,  399,  548,  333,  333,
				 333,  576,  537,  277,  333,  333,  365,  556,  833,  833,
				 833,  610,  666,  666,  666,  666,  666,  666, 1000,  722,
				 666,  666,  666,  666,  277,  277,  277,  277,  722,  722,
				 777,  777,  777,  777,  777,  583,  777,  722,  722,  722,
				 722,  666,  666,  610,  556,  556,  556,  556,  556,  556,
				 889,  500,  556,  556,  556,  556,  277,  277,  277,  277,
				 556,  556,  556,  556,  556,  556,  556,  548,  610,  556,
				 556,  556,  556,  500,  556,  500
			};
			
			static const int century[256] = {
				   0,    0,    0,    0,    0,    0,    0,    0,    0,  277,
				   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
				   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
				   0,    0,  277,  295,  389,  556,  556,  833,  814,  204,
				 333,  333,  500,  605,  277,  333,  277,  277,  556,  556,
				 556,  556,  556,  556,  556,  556,  556,  556,  277,  277,
				 605,  605,  605,  443,  736,  722,  722,  722,  777,  722,
				 666,  777,  833,  407,  556,  777,  666,  943,  814,  777,
				 666,  777,  722,  629,  666,  814,  722,  980,  704,  704,
				 610,  333,  605,  333,  605,  500,  333,  556,  556,  443,
				 574,  500,  333,  537,  610,  314,  295,  592,  314,  889,
				 610,  500,  574,  556,  443,  462,  389,  610,  537,  777,
				 537,  537,  480,  333,  605,  333,  605,  277,  556,  277,
				 204,  556,  389, 1000,  500,  500,  333, 1000,  629,  258,
				1000,  277,  610,  277,  277,  204,  204,  389,  389,  605,
				 556, 1000,  333, 1000,  462,  258,  833,  277,  480,  704,
				 277,  295,  556,  556,  605,  704,  605,  500,  333,  736,
				 333,  425,  605,  277,  736,  500,  399,  548,  333,  333,
				 333,  576,  605,  333,  333,  333,  299,  425,  833,  833,
				 833,  443,  722,  722,  722,  722,  722,  722, 1000,  722,
				 722,  722,  722,  722,  407,  407,  407,  407,  777,  814,
				 777,  777,  777,  777,  777,  605,  777,  814,  814,  814,
				 814,  704,  666,  574,  556,  556,  556,  556,  556,  556,
				 795,  443,  500,  500,  500,  500,  314,  314,  314,  314,
				 500,  610,  500,  500,  500,  500,  500,  548,  500,  610,
				 610,  610,  610,  537,  574,  537
			};
			
			static const int calibri[256] = {
				   0,    0,    0,    0,    0,    0,    0,    0,    0,  226,
				   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
				   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
				   0,    0,  226,  325,  400,  498,  506,  714,  682,  220,
				 303,  303,  498,  498,  249,  306,  252,  386,  506,  506,
				 506,  506,  506,  506,  506,  506,  506,  506,  267,  267,
				 498,  498,  498,  463,  894,  578,  543,  533,  615,  488,
				 459,  630,  623,  251,  318,  519,  420,  854,  645,  662,
				 516,  672,  542,  459,  487,  641,  567,  889,  519,  487,
				 468,  306,  386,  306,  498,  498,  291,  479,  525,  422,
				 525,  497,  305,  470,  525,  229,  239,  454,  229,  798,
				 525,  527,  525,  525,  348,  391,  334,  525,  451,  714,
				 433,  452,  395,  314,  460,  314,  498,  226,  506,  226,
				 249,  498,  418,  690,  498,  498,  395, 1038,  459,  338,
				 866,  226,  468,  226,  226,  249,  249,  418,  418,  498,
				 498,  905,  450,  705,  391,  338,  849,  226,  395,  487,
				 226,  325,  498,  506,  498,  506,  498,  498,  392,  834,
				 402,  512,  498,  226,  506,  394,  338,  498,  335,  334,
				 291,  549,  585,  252,  307,  246,  422,  512,  636,  671,
				 675,  463,  578,  578,  578,  578,  578,  578,  763,  533,
				 488,  488,  488,  488,  251,  251,  251,  251,  624,  645,
				 662,  662,  662,  662,  662,  498,  663,  641,  641,  641,
				 641,  487,  516,  527,  479,  479,  479,  479,  479,  479,
				 772,  422,  497,  497,  497,  497,  229,  229,  229,  229,
				 525,  525,  527,  527,  527,  527,  527,  498,  529,  525,
				 525,  525,  525,  452,  525,  452,
 			};
 			
 			static const int cambria[256] = {
				   0,    0,    0,    0,    0,    0,    0,    0,    0,  220,
				   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
				   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
				   0,    0,  220,  285,  393,  619,  505,  889,  687,  236,
				 381,  381,  427,  553,  205,  332,  205,  490,  553,  553,
				 553,  553,  553,  553,  553,  553,  553,  553,  263,  263,
				 553,  553,  553,  422,  885,  623,  611,  562,  661,  575,
				 536,  610,  686,  324,  306,  629,  536,  815,  680,  653,
				 567,  653,  621,  496,  592,  647,  603,  921,  571,  570,
				 537,  350,  490,  350,  553,  370,  284,  488,  547,  440,
				 554,  487,  302,  494,  551,  277,  266,  524,  271,  832,
				 558,  530,  556,  546,  413,  429,  338,  552,  503,  774,
				 483,  503,  454,  387,  316,  387,  712,  220,  628,  220,
				 205,  560,  360,  751,  516,  516,  284, 1263,  496,  302,
				 928,  220,  537,  220,  220,  221,  221,  375,  375,  443,
				 500, 1000,  284,  679,  429,  302,  818,  220,  454,  570,
				 220,  285,  440,  528,  543,  609,  316,  500,  284,  850,
				 416,  487,  553,  220,  850,  284,  375,  553,  407,  407,
				 284,  543,  587,  282,  284,  407,  427,  487,  865,  889,
				 865,  422,  623,  623,  623,  623,  623,  623,  866,  562,
				 575,  575,  575,  575,  324,  324,  324,  324,  664,  680,
				 653,  653,  653,  653,  653,  553,  653,  647,  647,  647,
				 647,  570,  573,  605,  488,  488,  488,  488,  488,  488,
				 752,  440,  487,  487,  487,  487,  277,  277,  277,  277,
				 530,  558,  530,  530,  530,  530,  530,  553,  530,  552,
				 552,  552,  552,  503,  547,  503
			};
#endif // FAML_USE_WIN32_FONTS
		}
		
		/* ----------------------------------------------------------------- */
		/*
		 *  fw0
		 *
		 *  Type0 (コンポジットフォント）のフォント群の横幅一覧．
		 *  Type0 の場合，CID 番号に対応する横幅を表す．
		 *  現在の実装では，CID 番号 1,000 までの 幅一覧（半角英数，
		 *  ひらがな，カタカナ，その他半角文字）を格納している．
		 */
		/* ----------------------------------------------------------------- */
		namespace fw0 {
#ifdef FAML_USE_WIN32_FONTS
			static const int ms_pgothic[1000] = {
				 1000,  305,  219,  500,  500,  500,  500,  594,  203,  305,
				  305,  500,  500,  203,  500,  203,  500,  500,  500,  500,
				  500,  500,  500,  500,  500,  500,  500,  203,  203,  500,
				  500,  500,  453,  668,  633,  637,  664,  648,  566,  551,
				  680,  641,  246,  543,  598,  539,  742,  641,  707,  617,
				  707,  625,  602,  590,  641,  633,  742,  602,  590,  566,
				  336, 1000,  336,  414,  305,  414,  477,  496,  500,  496,
				  500,  305,  461,  500,  211,  219,  461,  211,  734,  500,
				  508,  496,  496,  348,  461,  352,  500,  477,  648,  461,
				  477,  457,  234,  234,  234,  414, 1000,  504, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000,  441,  441,  441,
				  441,  441,  547,  523,  445,  480,  469,  516,  523,  504,
				  438,  500,  641,  617,  566,  625,  598,  637,  563,  652,
				  539,  621,  523,  664,  590,  637,  645,  555,  527,  602,
				  602,  602,  461,  645,  598,  578,  648,  492,  637,  516,
				  547,  613,  641,  605,  453,  660,  508,  609,  664,  641,
				  520,  559,  512,  656,  566,  559,  590,  563,  250,  230,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000,  621,  664,  664,  664,  664,  500,  500, // ID:633 は全角空白．幅は暫定
				  500, 1000, 1000,  500,  500,  500,  500,  500,  500, 1000,
				 1000,  746,  746,  734,  699, 1000, 1000, 1000, 1000, 1000,
				  961, 1000,  500, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000,  500,  500,  500,  500,  500,  500,
				  500,  500,  500,  500,  500,  500,  500,  500,  500,  500,
				  500,  500, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000,  500,  500,  500, 1000,
				  684,  684,  684,  684,  684,  684,  684,  684,  684,  684,
				  715,  777,  742,  758,  711,  633,  773,  770,  273,  605,
				  754,  629,  934,  770,  805,  711,  805,  758,  742,  617,
				  770,  715,  980,  652,  648,  648,  574,  602,  563,  602,
				  563,  297,  578,  621,  250,  250,  594,  250,  938,  621,
				  605,  605,  602,  379,  570,  336,  621,  512,  777,  520,
				  496,  508,  746,  941,  805,  945,  602,  707,  750,  902,
				  805,  945, 1000, 1000,  844,  902,  590,  816,  945,  980,
				  797,  895,  766,  883,  766,  766,  961,  980, 1000, 1000,
				  922,  961,  922,  922,  863,  902,  805,  953,  957,  902,
				  902,  766,  883,  902,  941, 1000, 1000, 1000, 1000, 1000,
				 1000,  961,  961,  961, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000,  891, 1000,  980,  980,  805,  844, 1000,
				  844,  980,  727,  863,  805,  746,  863, 1000,  844,  863,
				 1000, 1000, 1000,  855,  961,  758,  898,  652,  824,  754,
				  941,  742,  895,  809,  934,  824,  922,  961,  965,  805,
				  941,  930,  961,  797,  891, 1000, 1000,  898,  898,  902,
				  965,  914,  980,  805,  883,  766,  922,  910,  961,  734,
				  863,  922,  887,  961,  648,  707,  941,  910,  824,  930,
				  707, 1000, 1000, 1000,  766,  863,  863,  805,  883,  883,
				  945,  945,  945,  922,  953,  953,  902,  668,  977,  719,
				  898,  805,  980,  813,  961,  629,  727,  809,  746, 1000
			};
			
			static const int ms_pmincho[1000] = {
				 1000,  305,  305,  461,  500,  500,  500,  613,  305,  305,
				  305,  500,  500,  305,  500,  305,  500,  500,  500,  500,
				  500,  500,  500,  500,  500,  500,  500,  305,  305,  500,
				  500,  500,  500,  727,  664,  621,  699,  691,  598,  598,
				  711,  723,  289,  387,  668,  586,  801,  664,  766,  563,
				  766,  602,  504,  625,  691,  664,  871,  656,  625,  563,
				  332, 1000,  332,  305,  305,  305,  453,  500,  465,  500,
				  473,  254,  473,  500,  242,  242,  492,  242,  703,  500,
				  500,  500,  500,  367,  414,  352,  500,  477,  602,  469,
				  477,  453,  242,  219,  242,  500, 1000,  500, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000,  438,  438,  438,
				  438,  438,  574,  527,  480,  484,  523,  570,  531,  551,
				  438,  531,  664,  613,  586,  551,  648,  652,  590,  598,
				  535,  625,  539,  652,  652,  594,  648,  539,  574,  637,
				  586,  637,  453,  664,  625,  594,  648,  535,  664,  523,
				  598,  664,  613,  648,  449,  625,  531,  648,  637,  648,
				  555,  574,  469,  664,  590,  574,  598,  613,  238,  227,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000,  621,  664,  664,  664,  664,  500,  500, // 633:全角空白
				  500, 1000, 1000,  500,  500,  500,  500,  500,  500, 1000,
				 1000,  648,  801,  652,  703, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000,  500, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000,  500,  500,  500,  500,  500,  500,
				  500,  500,  500,  500,  500,  500,  500,  500,  500,  500,
				  500,  500, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000,  500,  500,  500, 1000,
				  621,  621,  621,  621,  621,  621,  621,  621,  621,  621,
				  805,  715,  762,  813,  719,  688,  801,  859,  359,  359,
				  805,  676, 1000,  836,  832,  680,  832,  727,  688,  719,
				  855,  770,  977,  730,  777,  656,  531,  574,  531,  574,
				  543,  387,  559,  613,  293,  293,  570,  293,  875,  613,
				  574,  574,  574,  414,  469,  422,  613,  543,  781,  574,
				  563,  500,  754,  883,  750,  953,  508,  617,  703,  898,
				  801, 1000,  945,  949,  793,  895,  645,  805,  914,  980,
				  754,  867,  754,  883,  777,  777, 1000, 1000, 1000, 1000,
				  922,  961,  906,  949,  902,  902,  855, 1000, 1000,  902,
				  941,  703,  844,  902,  949, 1000, 1000,  949,  969, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				  945,  980,  980,  824, 1000, 1000,  953,  758,  875, 1000,
				  836,  934,  688,  785,  766,  641,  793,  984,  863,  801,
				  953,  945,  984,  855,  945,  750,  891,  668,  777,  707,
				  801,  805,  941,  809,  941,  879,  926,  887,  902,  746,
				  883,  883,  934,  793,  863,  953,  961,  902,  902,  820,
				  902,  930,  949,  754,  855,  785,  910,  965,  945,  734,
				  848,  922,  902, 1000,  590,  707,  973,  910,  805,  922,
				  699,  977,  977,  977,  656,  852,  844,  844,  945,  945,
				 1000, 1000, 1000,  883,  922,  922,  930,  609,  863,  676,
				  941,  789,  926,  793,  941,  598,  703,  766,  609,  980
			};
			
			static const int ms_uigothic[1000] = {
				 1000,  305,  219,  500,  500,  500,  500,  594,  203,  305,
				  305,  500,  500,  203,  500,  203,  500,  500,  500,  500,
				  500,  500,  500,  500,  500,  500,  500,  203,  203,  500,
				  500,  500,  453,  668,  633,  637,  664,  648,  566,  551,
				  680,  641,  246,  543,  598,  539,  742,  641,  707,  617,
				  707,  625,  602,  590,  641,  633,  742,  602,  590,  566,
				  336, 1000,  336,  414,  305,  414,  477,  496,  500,  496,
				  500,  305,  461,  500,  211,  219,  461,  211,  734,  500,
				  508,  496,  496,  348,  461,  352,  500,  477,  648,  461,
				  477,  457,  234,  234,  234,  414, 1000,  504, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000,  441,  441,  441,
				  441,  441,  547,  523,  445,  480,  469,  516,  523,  504,
				  438,  500,  641,  617,  566,  625,  598,  637,  563,  652,
				  539,  621,  523,  664,  590,  637,  645,  555,  527,  602,
				  602,  602,  461,  645,  598,  578,  648,  492,  637,  516,
				  547,  613,  641,  605,  453,  660,  508,  609,  664,  641,
				  520,  559,  512,  656,  566,  559,  590,  563,  250,  230,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000,  620,  664,  664,  664,  664,  500,  500,
				  500, 1000, 1000,  500,  500,  500,  500,  500,  500, 1000,
				 1000,  746,  746,  734,  699, 1000, 1000, 1000, 1000, 1000,
				  816, 1000,  500, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000,  500,  500,  500,  500,  500,  500,
				  500,  500,  500,  500,  500,  500,  500,  500,  500,  500,
				  500,  500, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000,  500,  500,  500, 1000,
				  684,  684,  684,  684,  684,  684,  684,  684,  684,  684,
				  715,  777,  742,  758,  711,  633,  773,  770,  273,  605,
				  754,  629,  934,  770,  805,  711,  805,  758,  742,  617,
				  770,  715,  980,  652,  648,  648,  574,  602,  563,  602,
				  563,  297,  578,  621,  250,  250,  594,  250,  938,  621,
				  605,  605,  602,  379,  570,  336,  621,  512,  777,  520,
				  496,  508,  637,  816,  660,  816,  473,  598,  629,  785,
				  660,  816,  816,  832,  754,  801,  504,  629,  816,  832,
				  691,  770,  691,  770,  723,  723,  848,  848,  848,  848,
				  746,  797,  785,  785,  762,  785,  629,  785,  816,  785,
				  816,  629,  738,  855,  785,  848,  887,  816,  855,  855,
				  855,  816,  832,  832,  816,  816,  816,  816,  816,  816,
				  855,  855,  855,  754,  887,  816,  816,  762,  691,  848,
				  660,  855,  598,  754,  691,  629,  762,  887,  762,  691,
				  848,  855,  855,  754,  816,  586,  754,  566,  723,  586,
				  742,  598,  754,  660,  766,  715,  801,  816,  832,  691,
				  770,  785,  816,  691,  770,  816,  832,  816,  832,  766,
				  816,  816,  832,  754,  801,  691,  723,  785,  785,  578,
				  734,  801,  766,  816,  707,  723,  801,  746,  723,  816,
				  660,  848,  848,  832,  652,  707,  738,  676,  754,  754,
				  816,  816,  816,  816,  832,  816,  754,  598,  816,  691,
				  754,  660,  816,  660,  816,  504,  629,  691,  586,  816
			};
			
			static const int hgp_gothic_e[1000] = {
				 1000,  332,  254,  441,  543,  543,  543,  691,  203,  355,
				  355,  543,  543,  215,  332,  223,  543,  543,  543,  543,
				  543,  543,  543,  543,  543,  543,  543,  203,  203,  543,
				  543,  543,  543,  758,  691,  613,  602,  590,  578,  539,
				  645,  594,  223,  496,  656,  547,  715,  594,  637,  563,
				  637,  648,  559,  566,  594,  645,  859,  668,  641,  574,
				  414, 1000,  414,  500,  332,  328,  508,  500,  469,  500,
				  461,  355,  508,  504,  230,  313,  543,  223,  773,  504,
				  504,  504,  504,  383,  480,  367,  504,  535,  719,  543,
				  523,  473,  270,  234,  270,  449, 1000,  543, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000,  441,  441,  441,
				  441,  441,  547,  523,  445,  480,  469,  516,  523,  504,
				  469,  500,  645,  617,  566,  625,  598,  637,  563,  652,
				  539,  621,  527,  664,  590,  637,  645,  555,  527,  602,
				  602,  602,  461,  645,  598,  578,  648,  492,  637,  516,
				  547,  613,  641,  605,  453,  660,  508,  609,  664,  641,
				  520,  559,  512,  656,  566,  559,  590,  563,  250,  230,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000,  664,  664,  664,  664,  664,  500,  500,
				  500, 1000, 1000,  500,  500,  500,  500,  500,  500, 1000,
				 1000,  746,  746,  734,  734, 1000, 1000, 1000, 1000, 1000,
				  961, 1000,  500, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000,  500,  500,  500,  500,  500,  500,
				  500,  500,  500,  500,  500,  500,  500,  500,  500,  500,
				  500,  500, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000,  500,  500,  500, 1000,
				  645,  645,  645,  645,  645,  645,  645,  645,  645,  645,
				  863,  770,  773,  746,  723,  668,  820,  730,  246,  629,
				  828,  680,  902,  738,  824,  707,  809,  816,  719,  715,
				  738,  809, 1000,  824,  805,  723,  621,  617,  586,  617,
				  586,  426,  672,  621,  262,  367,  668,  246,  977,  621,
				  629,  617,  617,  453,  586,  445,  621,  660,  910,  668,
				  648,  582,  797,  918,  813,  938,  605,  707,  770,  922,
				  797,  922,  980,  980,  875,  934,  602,  813,  938,  961,
				  793,  887,  789,  906,  766,  746,  969,  984,  992,  996,
				  922,  957,  930,  930,  871,  902,  809,  945,  973,  926,
				  926,  770,  867,  941,  934,  992,  992,  973,  973,  988,
				  980,  965,  984,  973, 1000, 1000, 1000, 1000, 1000, 1000,
				  973,  980,  980,  914, 1000,  980,  969,  813,  859, 1000,
				  836,  969,  777,  887,  781,  711,  871, 1000,  832,  863,
				 1000, 1000, 1000,  883,  977,  773,  906,  672,  801,  734,
				  922,  762,  906,  809,  973,  855,  941,  992, 1000,  813,
				  941,  945,  957,  797,  895, 1000, 1000,  930,  930,  945,
				  969,  961,  988,  828,  895,  797,  961,  934,  984,  766,
				  902,  934,  898,  965,  637,  727,  949,  918,  852,  934,
				  715, 1000, 1000, 1000,  773,  852,  852,  836,  902,  922,
				  977,  977,  977,  961,  965,  973,  910,  695,  984,  766,
				  902,  820,  992,  813,  965,  629,  730,  836,  707,  992
			};
			
			static const int hgp_gothic_m[1000] = {
				 1000,  332,  230,  523,  582,  582,  582,  688,  219,  348,
				  348,  582,  582,  203,  582,  199,  582,  582,  582,  582,
				  582,  582,  582,  582,  582,  582,  582,  203,  223,  582,
				  582,  582,  582,  801,  660,  598,  621,  598,  551,  523,
				  633,  574,  176,  508,  613,  527,  707,  582,  637,  555,
				  637,  582,  559,  598,  574,  629,  848,  613,  633,  559,
				  367, 1000,  367,  457,  332,  328,  492,  500,  496,  500,
				  508,  383,  555,  473,  184,  285,  504,  176,  719,  469,
				  520,  492,  492,  359,  484,  363,  469,  520,  723,  527,
				  508,  473,  352,  176,  352,  574, 1000,  582, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000,  395,  395,  395,
				  395,  395,  629,  617,  480,  551,  609,  637,  645,  656,
				  480,  609,  426,  676,  570,  621,  699,  711,  637,  715,
				  609,  699,  574,  746,  664,  668,  707,  609,  602,  707,
				  680,  703,  402,  723,  699,  637,  707,  418,  734,  543,
				  625,  742, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000,  664,  664,  664,  664,  664,  500,  500,
				  500, 1000, 1000,  500,  500,  500,  500,  500,  500, 1000,
				 1000,  590,  633,  574,  586, 1000, 1000, 1000, 1000, 1000,
				  949, 1000,  500, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000,  500,  500,  500,  500,  500,  500,
				  500,  500,  500,  500,  500,  500,  500,  500,  500,  500,
				  500,  500, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000,  500,  500,  500, 1000,
				  660,  660,  660,  660,  660,  660,  660,  660,  660,  660,
				  793,  715,  746,  715,  672,  617,  758,  688,  188,  602,
				  734,  629,  852,  691,  762,  664,  762,  727,  668,  719,
				  684,  758, 1000,  723,  758,  660,  578,  586,  582,  582,
				  602,  445,  656,  559,  195,  324,  598,  188,  867,  555,
				  613,  586,  586,  414,  570,  418,  555,  613,  871,  621,
				  605,  559,  766,  875,  770,  875,  582,  664,  758,  867,
				  777,  898,  938,  914,  820,  852,  527,  695,  867,  855,
				  746,  820,  738,  840,  707,  707,  949,  914,  961,  953,
				  875,  895,  875,  859,  801,  848,  797,  891,  914,  879,
				  855,  695,  773,  918,  855,  949,  996,  898,  910,  891,
				  883,  922,  895,  883,  988,  984,  980,  961,  965,  965,
				  918,  895,  883,  848,  969,  945,  898,  746,  840,  934,
				  777,  883,  719,  820,  746,  582,  801,  996,  793,  855,
				  949,  902,  957,  836,  914,  781,  859,  676,  746,  688,
				  773,  773,  891,  824,  934,  809,  871,  918,  895,  754,
				  883,  891,  906,  723,  824,  949,  949,  844,  840,  883,
				  895,  887,  879,  746,  840,  754,  863,  895,  902,  746,
				  840,  871,  898,  902,  500,  555,  922,  891,  805,  898,
				  617,  938,  922,  898,  676,  742,  723,  773,  855,  840,
				  941,  941,  941,  918,  883,  922,  848,  652,  930,  695,
				  898,  824,  938,  828,  957,  598,  688,  809,  574,  965
			};
			
			static const int hgp_soeikaku_gothic_ub[1010] = {
				 1000,  332,  273,  344,  629,  629,  629,  680,  215,  535,
				  535,  629,  629,  219,  629,  230,  629,  629,  629,  629,
				  629,  629,  629,  629,  629,  629,  629,  230,  230,  629,
				  629,  629,  629,  746,  594,  613,  652,  594,  539,  527,
				  660,  617,  242,  492,  594,  531,  730,  633,  676,  559,
				  676,  590,  590,  547,  594,  574,  723,  598,  559,  590,
				  551, 1000,  551,  332,  332,  297,  520,  539,  516,  539,
				  539,  316,  527,  508,  234,  273,  496,  230,  727,  504,
				  539,  551,  551,  340,  484,  320,  508,  469,  680,  504,
				  461,  484,  551,  172,  551,  523, 1000,  629, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000,  570,  570,  570,
				  570,  570,  617,  551,  469,  547,  578,  516,  539,  543,
				  500,  605,  656,  688,  605,  688,  691,  641,  648,  652,
				  664,  668,  625,  676,  648,  668,  695,  641,  637,  660,
				  688,  668,  492,  660,  691,  648,  648,  563,  734,  602,
				  641,  723,  707,  672,  543,  695,  598,  688,  684,  703,
				  609,  645,  566,  707,  621,  641,  676,  668,  191,  145,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000,  664,  664,  664,  664,  664,  500,  500,
				  500, 1000, 1000,  500,  500,  500,  500,  500,  500, 1000,
				 1000,  539,  656,  582,  648, 1000, 1000, 1000, 1000, 1000,
				  848, 1000,  500, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000,  500,  500,  500,  500,  500,  500,
				  500,  500,  500,  500,  586,  586,  500,  500,  500,  500,
				  500,  500, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000,  500,  500,  500, 1000,
				  750,  750,  750,  750,  750,  750,  750,  750,  750,  750,
				  750,  738,  805,  758,  691,  676,  828,  766,  277,  598,
				  766,  668,  918,  789,  859,  699,  859,  730,  738,  711,
				  742,  734,  941,  770,  723,  754,  637,  672,  641,  668,
				  680,  406,  660,  645,  266,  324,  625,  266,  945,  645,
				  672, 1000,  676,  418,  598,  402,  613,  598,  891,  637,
				  586,  605,  695,  898,  719,  930,  609,  789,  699,  836,
				  711,  902,  945,  941,  805,  879,  668,  813,  891,  949,
				  820,  879,  816,  918,  781,  777,  871,  895,  922,  941,
				  867,  906, 1000,  902,  840,  910,  762,  930,  938,  871,
				  883,  797,  809,  828,  828,  828,  828,  828,  828,  828,
				  828,  828,  828,  828,  828,  828,  828,  828,  828,  828,
				  828,  828,  828,  828,  828,  828,  828,  828,  828,  828,
				  828,  910,  742,  863,  832,  727,  844,  918,  863,  750,
				  918,  910,  848,  816,  883,  711,  883,  602,  785,  672,
				 // 867,  734,  887,  641,  824,  820,  840, 1000, 1000, 1000, 「キ」～「ク」がおかしい？
				  867,  734,  887,  641,  824,  820,  840,  840,  914,  809,
				 //1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,  871,  871, 「グ」～「ス」がおかしい？
				  840,  850,  924,  825,  900,  840,  914,  821,  871,  871,
				  926,  883,  883,  840,  914,  809,  840,  855,  891,  762,
				  879,  910,  832,  902,  621,  656,  855,  883,  828,  844,
				  711,  938,  938,  938,  762,  824,  805,  832,  910,  875,
				  934,  934,  934,  906,  906,  906,  859,  742,  891,  773,
				  875,  707,  891,  684,  891,  609,  785,  832,  699,  926,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000,  821, 1000, 1000
			};
			
			static const int hgp_soeikaku_pop[1000] = {
				 1000,  332,  375,  211,  648,  648,  648,  695,  168,  355,
				  355,  648,  648,  191,  648,  184,  648,  648,  648,  648,
				  648,  648,  648,  648,  648,  648,  648,  203,  203,  648,
				  648,  648,  648,  668,  684,  633,  629,  605,  605,  578,
				  586,  652,  262,  570,  625,  531,  734,  637,  602,  609,
				  613,  613,  559,  617,  613,  621,  750,  672,  613,  586,
				  434, 1000,  434,  293,  332,  234,  512,  516,  508,  555,
				  516,  480,  570,  555,  270,  379,  598,  250,  742,  594,
				  555,  590,  566,  516,  520,  469,  520,  555,  727,  559,
				  570,  484,  316,  121,  316,  277, 1000,  648, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000,  590,  590,  590,
				  590,  590,  633,  512,  461,  512,  516,  520,  496,  512,
				  441,  504,  695,  703,  664,  715,  707,  707,  688,  711,
				  629,  703,  602,  707,  699,  668,  719,  684,  703,  711,
				  688,  707,  574,  703,  707,  625,  699,  508,  723,  664,
				  684,  730,  730,  715,  633,  711,  656,  703,  715,  699,
				  625,  707,  551,  707,  641,  660,  688,  680,  184,  172,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000,  664,  664,  664,  664,  664,  500,  500,
				  500, 1000, 1000,  500,  500,  500,  500,  500,  500, 1000,
				 1000,  430,  531,  414,  523, 1000, 1000, 1000, 1000, 1000,
				  887, 1000,  500, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000,  500,  500,  500,  500,  500,  500,
				  500,  500,  613,  613,  625,  625,  500,  500,  500,  500,
				  500,  500, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000,  500,  500,  500, 1000,
				  781,  781,  781,  781,  781,  781,  781,  781,  781,  781,
				  836,  773,  758,  742,  734,  711,  707,  785,  301,  688,
				  762,  648,  887,  770,  734,  746,  754,  750,  684,  758,
				  750,  773,  914,  820,  754,  723,  629,  629,  602,  672,
				  621,  594,  684,  668,  305,  445,  727,  301,  914,  730,
				  680,  719,  699,  633,  625,  570,  633,  691,  891,  684,
				  691,  594,  680,  938,  688,  906,  590,  859,  637,  914,
				  660,  941,  941,  938,  910,  934,  809,  852,  926,  957,
				  902,  945,  930,  922,  852,  867,  906,  941,  922,  945,
				  914,  945,  930,  938,  922,  926,  641,  910,  934,  906,
				  922,  867,  914,  922,  914,  926,  941,  727,  727,  727,
				  727,  727,  727,  727,  727,  727,  727,  727,  727,  727,
				  727,  727,  727, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000,  914,  906,  660,  918,  590,  859,  660,
				  930,  672,  918,  672,  926,  898,  941,  922,  914,  813,
				  918,  914,  926,  781,  867,  930,  941,  914,  906,  883,
				  875,  930,  930,  891,  895,  922,  941,  930,  922,  652,
				  902,  945,  926,  930,  738,  719,  914,  918,  805,  902,
				  641,  938,  918,  930,  906,  871,  922,  895,  914,  918,
				  961,  969,  957,  941,  957,  941,  930,  828,  926,  844,
				  922,  648, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000
			};
			
			static const int hgp_soei_presence_eb[1000] = {
				 1000, 1000,  500,  500, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000,  500, 1000,  500, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000,  500,  500,  500,  500,  500,  500,  500,  500,
				  500,  500, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000,  500, 1000,  500, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000
			};
			
			static const int hgp_mincho_b[1000] = {
				 1000,  332,  223,  402,  477,  477,  477,  691,  230,  262,
				  262,  477,  477,  230,  477,  223,  477,  477,  477,  477,
				  477,  477,  477,  477,  477,  477,  477,  223,  230,  477,
				  477,  477,  477,  789,  707,  621,  594,  660,  594,  602,
				  660,  707,  352,  492,  719,  594,  793,  684,  668,  625,
				  656,  668,  527,  672,  719,  707,  832,  684,  684,  586,
				  320, 1000,  320,  465,  332,  305,  477,  539,  453,  539,
				  445,  410,  527,  559,  293,  320,  520,  316,  754,  570,
				  457,  539,  539,  414,  391,  348,  570,  523,  715,  520,
				  520,  430,  297,  125,  297,  457, 1000,  477, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000,  457,  457,  457,
				  457,  457,  672,  613,  512,  563,  637,  656,  629,  648,
				  512,  605,  750,  742,  621,  672,  777,  773,  711,  750,
				  645,  758,  641,  770,  754,  707,  770,  641,  684,  773,
				  711,  770,  480,  762,  773,  660,  719,  531,  781,  602,
				  680,  785, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000,  664,  664,  664,  664,  664,  500,  500,
				  500, 1000, 1000,  500,  500,  500,  500,  500,  500, 1000,
				 1000,  484,  629,  512,  609, 1000, 1000, 1000, 1000, 1000,
				  934, 1000,  500, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000,  500,  500,  500,  500,  500,  500,
				  500,  500,  500,  500,  500,  500,  500,  500,  500,  500,
				  500,  500, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,  496,
				  496,  496,  496,  496,  496,  496,  496,  496,  496,  496,
				  496,  496,  496,  496,  496,  496,  496,  496,  496,  496,
				  496,  496,  496,  496,  496,  496,  496,  496,  496,  496,
				  496,  496,  496,  496,  496,  496,  496,  496,  496,  496,
				  496,  496,  496,  496,  496,  496,  496,  496,  496,  496,
				  496,  496,  496,  496, 1000, 1000,  500,  500,  500, 1000,
				  570,  441,  566,  547,  578,  551,  539,  566,  559,  531,
				  867,  754,  723,  805,  719,  727,  805,  863,  414,  594,
				  875,  719,  973,  832,  789,  762,  801,  816,  637,  789,
				  875,  867, 1000,  832,  832,  719,  566,  656,  547,  652,
				  539,  488,  637,  676,  348,  375,  629,  371,  918,  688,
				  551,  656,  648,  492,  469,  418,  688,  633,  871,  629,
				  629,  516,  750,  902,  770,  914,  500,  598,  699,  859,
				  754,  930,  945,  945,  816,  863,  539,  691,  902,  914,
				  754,  828,  746,  883,  742,  742,  961,  961,  973,  973,
				  895,  906,  906,  914,  895,    0,    0,    0,    0,    0,
				    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
				    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
				    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
				    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
				    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
				    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
				    0,    0,  949,  789,  871,  961,  961,  922,  922,  871,
				  938,  953,  953,  793,  867,  832,  926,  957,  957,  727,
				  887,  941,  953,  965,  547,  598,  949,  957,  809,  891,
				  668,  977,  977,  977,  734,  809,  816,  836,  898,  906,
				  977,  977,  977,  883,  879,  879,  961,  598,  898,  711,
				  945,  762,  941,  797,  973,  602,  734,  840,  578,  910
			};
			
			static const int hgp_mincho_e[1000] = {
				 1000,  332,  223,  473,  520,  520,  520,  707,  262,  305,
				  305,  520,  520,  266,  520,  242,  520,  520,  520,  520,
				  520,  520,  520,  520,  520,  520,  520,  242,  273,  520,
				  520,  520,  520,  773,  641,  621,  605,  676,  574,  555,
				  656,  660,  359,  461,  676,  563,  738,  652,  699,  629,
				  719,  621,  566,  598,  668,  672,  801,  629,  629,  559,
				  332, 1000,  332,  445,  332,  320,  500,  555,  453,  535,
				  473,  387,  563,  547,  266,  324,  508,  273,  746,  555,
				  543,  551,  551,  395,  461,  340,  555,  516,  711,  504,
				  512,  387,  258,  117,  258,  480, 1000,  520, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000,  438,  438,  438,
				  438,  438,  574,  527,  480,  484,  523,  570,  531,  551,
				  438,  531,  664,  613,  586,  551,  648,  652,  590,  598,
				  535,  625,  539,  652,  652,  594,  648,  539,  574,  637,
				  586,  637,  453,  664,  625,  594,  648,  535,  664,  523,
				  598,  664,  613,  648,  449,  625,  531,  648,  637,  648,
				  555,  574,  469,  664,  590,  574,  598,  613,  238,  227,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000,  664,  664,  664,  664,  664,  500,  500,
				  500, 1000, 1000,  500,  500,  500,  500,  500,  500, 1000,
				 1000,  641,  742,  637,  680, 1000, 1000, 1000, 1000, 1000,
				  914, 1000,  500, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000,  500,  500,  500,  500,  500,  500,
				  500,  500,  500,  500,  500,  500,  500,  504,  500,  500,
				  500,  500, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000,  504,  504,  504, 1000,
				  574,  574,  574,  574,  574,  574,  574,  574,  574,  574,
				  840,  742,  730,  813,  746,  719,  789,  852,  410,  586,
				  871,  734,  949,  844,  797,  762,  805,  805,  625,  777,
				  859,  863, 1000,  816,  816,  723,  594,  648,  531,  648,
				  555,  504,  660,  711,  363,  391,  660,  363,  965,  715,
				  590,  656,  652,  512,  488,  453,  715,  668,  914,  664,
				  664,  516, 1000,  957,  746,  922,  543,  688,  707,  871,
				  762,  941,  953,  953,  953,  953,  953,  953,  953,  953,
				  953,  953,  953,  953,  953,  953,  953,  953,  953,  953,
				  953,  953,  953,  953,  953,  953,  953,  953,  953,  953,
				  953,  953,  953,  953,  953,  953,  953,  953,  953,  953,
				  953,  953,  953,  953,  953,  953,  953,  953,  953,  953,
				  953,  953,  953,  953,  953,  953,  953,  953,  953,  953,
				  953,  953,  953,  953,  953,  656,  816,  973,  852,  785,
				  961,  934,  961,  895,  930,  742,  941,  613,  746,  691,
				  863,  805,  965,  766,  926, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,  875,  840,
				  906,  938,  938,  773,  863,  813,  914,  977,  980,  703,
				  863,  914,  977,  961,  582,  656,  961,  961,  762,  879,
				  652,  969,  965,  965,  738,  828,  855,  832,  910,  914,
				  973,  973,  977,  926,  926,  922,  910,  609,  895,  668,
				  953,  766,  945,  777,  961,  590,  723,  836,  617,  973
			};
			
			static const int hgp_kyokasyo[1000] = {
				 1000,  328,  145,  398,  500,  500,  500,  488,  180,  320,
				  320,  500,  500,  184,  500,  184,  469,  465,  465,  465,
				  465,  465,  465,  465,  465,  465,  465,  176,  176,  500,
				  500,  500,  426,  527,  539,  461,  574,  504,  441,  414,
				  520,  500,  145,  395,  500,  402,  566,  496,  520,  434,
				  520,  461,  445,  449,  508,  535,  637,  492,  492,  461,
				  332, 1000,  332,  344,  332,  281,  398,  410,  371,  410,
				  375,  301,  387,  414,  145,  246,  387,  160,  570,  387,
				  402,  418,  418,  320,  336,  277,  426,  418,  566,  371,
				  406,  387,  281,  109,  281,  500, 1000,  500, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000,  434,  434,  434,
				  434,  434,  504,  480,  328,  430,  496,  445,  488,  508,
				  414,  445,  664,  656,  414,  578,  680,  613,  617,  645,
				  543,  648,  570,  684,  563,  586,  656,  559,  559,  621,
				  602,  629,  355,  637,  652,  492,  609,  434,  691,  504,
				  609,  691,  602,  656,  422,  605,  480,  656,  656,  691,
				  555,  563,  426,  586,  453,  582,  574,  551,  219,  184,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000,  656,  664,  664,  664,  664,  500,  500,
				  500, 1000, 1000,  500,  500,  500,  500,  500,  500, 1000,
				 1000,  398,  652,  391,  605, 1000, 1000, 1000, 1000, 1000,
				  910, 1000,  500, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000,  500,  500,  500,  500,  500,  500,
				  500,  500,  500,  500,  500,  500,  500,  500,  500,  500,
				  500,  500, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000,  500,  500,  500, 1000,
				  586,  586,  586,  586,  586,  586,  586,  586,  586,  586,
				  637,  547,  574,  605,  527,  492,  629,  594,  148,  473,
				  605,  480,  676,  582,  633,  520,  633,  543,  539,  543,
				  602,  645,  750,  590,  594,  555,  477,  488,  441,  488,
				    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
				    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
				    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
				    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
				    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
				    0,    0,    0,    0,    0,    0,  699,  914,  918,  770,
				  855,  676,  785,  855,  836,  906,  934,  883,  828,  836,
				  840,  863,  863,  863,  906,  906,  906,  957,  957,  957,
				  852,  863,  855,  762,  922,  852,  863,  641,  695,  945,
				  637,  832,  551,  684,  703,  531,  711,  914,  773,  684,
				  887,  848,  867,  691,  844,  656,  863,  410,  551,  582,
				  785,  684,  926,  605,  832,  840,  848,  852,  855,  738,
				 1000, 1000,  875,  766,  777,  918,  918,  777,  777,  793,
				  840,  875,  875,  773,  832,  750,  852,  867,  871,  609,
				  816,  879,  848,  855,  457,  563,  875,  871,  703,  836,
				  578,  945,  945,  945,  672,  684,  672,  828,  891,  867,
				  941,  941,  941,  824,  824,  824,  883,  582,  824,  641,
				  871,  664,  902,  699,  914,  582,  758,  750,  551,  883
			};
			
			static const int hgp_gyosho[1000] = {
				 1000,  328,  352,  527,  469,  469,  469,  656,  266,  391,
				  391,  469,  469,  289,  469,  281,  469,  469,  469,  469,
				  469,  469,  469,  469,  469,  469,  469,  273,  273,  469,
				  469,  469,  469,  605,  535,  484,  492,  543,  438,  453,
				  543,  566,  285,  461,  551,  516,  641,  566,  504,  496,
				  555,  574,  547,  488,  551,  555,  676,  594,  531,  539,
				  406, 1000,  406,  488,  328,  379,  473,  457,  434,  492,
				  441,  461,  504,  480,  273,  430,  484,  301,  637,  609,
				  410,  406,  430,  410,  418,  348,  488,  453,  590,  555,
				  508,  484,  387,  195,  387,  477, 1000,  469, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000,  438,  438,  438,
				  438,  438,  547,  508,  422,  461,  543,  512,  520,  527,
				  438,  520,  555,  586,  539,  547,  547,  578,  566,  566,
				  547,  586,  547,  586,  586,  539,  586,  547,  547,  586,
				  586,  586,  449,  586,  586,  566,  586,  508,  586,  508,
				  547,  586,  566,  586,  508,  566,  508,  566,  547,  566,
				  527,  527,  449,  547,  547,  527,  547,  508,  293,  273,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000,  656,  918,  918,  918,  918,  918,  918,
				  918,  918,  918,  918,  918,  918,  918,  918,  918,  918,
				  918,  918,  918,  918,  918,  918,  918,  918,  918,  918,
				  918,  918,  918,  918,  918,  918,  918,  918,  918,  918,
				 1000, 1000, 1000, 1000,  918,  918,  918,  918,  918,  918,
				  918,  918,  918,  918,  918,  918,  918,  918,  918,  918,
				  918,  918,  918,  918,  918,  918,  918,  918,  918,  918,
				  918,  918,  918,  918,  918,  918,  918,  918,  918,  918,
				  918,  918, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000,  500,  500,  500, 1000,
				  586,  586,  586,  586,  586,  586,  586,  586,  586,  586,
				  645,  578,  594,  656,  516,  531,  652,  680,  324,  543,
				  652,  609,  773,  680,  645,  598,  750,  711,  664,  574,
				  652,  680,  805,  711,  645,  637,  566,  539,  520,  590,
				  527,  551,  605,  594,  340,  531,  563,  375,  758,  727,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				  867,  867,  867,  867,  867,  867,  867,  867,  867,  867,
				  867,  867,  867,  867,  867,  867,  867,  867,  867,  867,
				  867,  867,  867,  867,  867,  867,  867,  867,  867,  867,
				  867,  867,  867,  867,  867,  684,  820,  930,  898,  746,
				  797,  680,  707,  828,  836,  965,  891,  773,  848,  879,
				  875,  750,  777,  750,  977,  957,  965,  938,  918,  895,
				  836,  918,  844,  625,  910,  836,  895,  688,  816,  969,
				  691,  805,  547,  648,  645, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
				  867,  813,  891,  707,  813,  785,  879,  879,  898,  652,
				  781,  820,  848,  883,  531,  621,  863,  879,  785,  855,
				  660,  949,  941,  965,  621,  668,  629,  770,  852,  816,
				  891,  914,  938,  902,  926,  926,  879,  547,  805,  680,
				  836,  777,  848,  785,  953,  617,  676,  699,  539,  957
			};
#endif // FAML_USE_WIN32_FONTS
		}
		
		/* ----------------------------------------------------------------- */
		//  Courier
		/* ----------------------------------------------------------------- */
		const font_property courier(
			"Courier",							// FontName
			1,									// Type
			35,									// Flags
			562,								// CapHeight
			629,								// Ascent
			-157,								// Descent
			51,									// StemV
			0,									// ItalicAngle
			square(coordinate(-23, -250),		// loswer-left of FontBBox
				coordinate(715, 805)),			// upper-right of FontBBox
			"",									// Panose
			fw1::courier,						// Widths
			fw1::courier + 256					// sizeof(Widths) / sizeof(int)
		);
		
		/* ----------------------------------------------------------------- */
		//  Helvetica
		/* ----------------------------------------------------------------- */
		const font_property helvetica(
			"Helvetica",						// FontName
			1,									// Type
			32,									// Flags
			718,								// CapHeight
			718,								// Ascent
			-207,								// Descent
			88,									// StemV
			0,									// ItalicAngle
			square(coordinate(-166, -225),		// loswer-left of FontBBox
				coordinate(1000, 931)),			// upper-right of FontBBox
			"",									// Panose
			fw1::helvetica,						// Widths
			fw1::helvetica + 256					// sizeof(Widths) / sizeof(int)
		);
		
		/* ----------------------------------------------------------------- */
		//  Times-Roman
		/* ----------------------------------------------------------------- */
		const font_property times(
			"Times-Roman",						// FontName
			1,									// Type
			34,									// Flags
			662,								// CapHeight
			683,								// Ascent
			-217,								// Descent
			84,									// StemV
			0,									// ItalicAngle
			square(coordinate(-168, -218),		// loswer-left of FontBBox
				coordinate(1000, 898)),			// upper-right of FontBBox
			"",									// Panose
			fw1::times,							// Widths
			fw1::times + 256						// sizeof(Widths) / sizeof(int)
		);
		
#ifdef FAML_USE_WIN32_FONTS
		/* ----------------------------------------------------------------- */
		//  Arial
		/* ----------------------------------------------------------------- */
		const font_property arial(
			"Arial",							// FontName
			1,									// Type
			32,									// Flags
			718,								// CapHeight
			905,								// Ascent
			-211,								// Descent
			88,									// StemV
			0,									// ItalicAngle
			square(coordinate(-665, -325),		// loswer-left of FontBBox
				coordinate(2028, 1006)),		// upper-right of FontBBox
			"",									// Panose
			fw1::arial,							// Widths
			fw1::arial + 256					// sizeof(Widths) / sizeof(int)
		);
		
		/* ----------------------------------------------------------------- */
		//  Century
		/* ----------------------------------------------------------------- */
		const font_property century(
			"Century",							// FontName
			1,									// Type
			34,									// Flags
			985,								// CapHeight
			985,								// Ascent
			-215,								// Descent
			87,									// StemV
			0,									// ItalicAngle
			square(coordinate(-165, -307),		// loswer-left of FontBBox
				coordinate(1246, 1201)),		// upper-right of FontBBox
			"",									// Panose
			fw1::century,						// Widths
			fw1::century + 256					// sizeof(Widths) / sizeof(int)
		);
		
		/* ----------------------------------------------------------------- */
		//  Calibri
		/* ----------------------------------------------------------------- */
		const font_property calibri(
			"Calibri",							// FontName
			1,									// Type
			32,									// Flags
			750,								// CapHeight
			750,								// Ascent
			-250,								// Descent
			50,									// StemV
			0,									// ItalicAngle
			square(coordinate(-476, -250),		// loswer-left of FontBBox
				coordinate(1214, 750)),			// upper-right of FontBBox
			"",									// Panose
			fw1::calibri,						// Widths
			fw1::calibri + 256					// sizeof(Widths) / sizeof(int)
		);
		
		/* ----------------------------------------------------------------- */
		//  Cambria
		/* ----------------------------------------------------------------- */
		const font_property cambria(
			"Cambria",							// FontName
			1,									// Type
			32,									// Flags
			778,								// CapHeight
			950,								// Ascent
			-222,								// Descent
			59,									// StemV
			0,									// ItalicAngle
			square(coordinate(-1475, -222),		// loswer-left of FontBBox
				coordinate(2868, 778)),			// upper-right of FontBBox
			"",									// Panose
			fw1::cambria,						// Widths
			fw1::cambria + 256					// sizeof(Widths) / sizeof(int)
		);
#endif // FAML_USE_WIN32_FONTS
		
		/* ----------------------------------------------------------------- */
		//  GothicBBB-Medium
		/* ----------------------------------------------------------------- */
		const font_property gothic_bbb_medium(
			"GothicBBB-Medium",					// FontName
			0,									// Type
			4,									// Flags
			737,								// CapHeight
			752, -271,							// Ascent and Descent
			99,									// StemV
			0,									// ItalicAngle
			square(coordinate(-170, -268),		// loswer-left of FontBBox
				coordinate(1001, 944)),			// upper-right of FontBBox
			"0801020b0500000000000000"			// Panose
		);
		
		/* ----------------------------------------------------------------- */
		//  HeiseiKakuGo-W5
		/* ----------------------------------------------------------------- */
		const font_property heisei_kakugo_w5(
			"HeiseiKakuGo-W5",					// FontName
			0,									// Type
			4,									// Flags
			737,								// CapHeight
			752, -221,							// Ascent and Descent
			114,								// StemV
			0,									// ItalicAngle
			square(coordinate(-92, -250),		// loswer-left of FontBBox
				coordinate(1010, 922)),			// upper-right of FontBBox
			"0801020b0600000000000000"			// Panose
		);
		
		/* ----------------------------------------------------------------- */
		//  Ryumin-Light
		/* ----------------------------------------------------------------- */
		const font_property ryumin_light(
			"Ryumin-Light",						// FontName
			0,									// Type
			6,									// Flags
			709,								// CapHeight
			723, -241,							// Ascent and Descent
			69,									// StemV
			0,									// ItalicAngle
			square(coordinate(-170, -331),		// loswer-left of FontBBox
				coordinate(1024, 903)),			// upper-right of FontBBox
			"010502020300000000000000"			// Panose
		);
		
		/* ----------------------------------------------------------------- */
		//  HeiseiMin-W3
		/* ----------------------------------------------------------------- */
		const font_property heisei_min3(
			"HeiseiMin-W3",						// FontName
			0,									// Type
			6,									// Flags
			709,								// CapHeight
			723, -241,							// Ascent and Descent
			69,									// StemV
			0,									// ItalicAngle
			square(coordinate(-123, -257),		// loswer-left of FontBBox
				coordinate(1001, 910)),			// upper-right of FontBBox
			"010502020400000000000000"			// Panose
		);
		
		/* ----------------------------------------------------------------- */
		//  KozMin-Regular
		/* ----------------------------------------------------------------- */
		const font_property kozmin_regular(
			"KozMin-Regular",					// FontName
			0,									// Type
			6,									// Flags
			737,								// CapHeight
			752, -271,							// Ascent and Descent
			58,									// StemV
			0,									// ItalicAngle
			square(coordinate(-107, -270),		// loswer-left of FontBBox
				coordinate(1042, 937)),			// upper-right of FontBBox
			""									// Panose
		);
		
#ifdef FAML_USE_WIN32_FONTS
		/* ----------------------------------------------------------------- */
		//  MS-Gothic
		/* ----------------------------------------------------------------- */
		const font_property ms_gothic(
			"MS-Gothic",						// FontName
			0,									// Type
			32,									// Flags
			859,								// CapHeight
			859, -141,							// Ascent and Descent
			50,									// StemV
			0,									// ItalicAngle
			square(coordinate(-121, -141),		// loswer-left of FontBBox
				coordinate(969, 859)),			// upper-right of FontBBox
			"0801020b0609070205080204"			// Panose
		);
		
		/* ----------------------------------------------------------------- */
		//  MS-PGothic
		/* ----------------------------------------------------------------- */
		const font_property ms_pgothic(
			"MS-PGothic",						// FontName
			0,									// Type
			32,									// Flags
			859,								// CapHeight
			859, -141,							// Ascent and Descent
			41,									// StemV
			0,									// ItalicAngle
			square(coordinate(-121, -141),		// loswer-left of FontBBox
				coordinate(996, 859)),			// upper-right of FontBBox
			"",									// Panose
			fw0::ms_pgothic,					// Widths
			fw0::ms_pgothic + 1000				// sizeof(Widths) / sizeof(int)
		);
		
		/* ----------------------------------------------------------------- */
		//  MS-Mincho
		/* ----------------------------------------------------------------- */
		const font_property ms_mincho(
			"MS-Mincho",						// FontName
			0,									// Type
			32,									// Flags
			859,								// CapHeight
			859, -141,							// Ascent and Descent
			50,									// StemV
			0,									// ItalicAngle
			square(coordinate(-82, -141),		// loswer-left of FontBBox
				coordinate(996, 859)),			// upper-right of FontBBox
			"010502020609040205080304"			// Panose
		);
		
		/* ----------------------------------------------------------------- */
		//  MS-PMincho
		/* ----------------------------------------------------------------- */
		const font_property ms_pmincho(
			"MS-PMincho",						// FontName
			0,									// Type
			32,									// Flags
			859,								// CapHeight
			859, -141,							// Ascent and Descent
			41,									// StemV
			0,									// ItalicAngle
			square(coordinate(-82, -141),		// loswer-left of FontBBox
				coordinate(996, 859)),			// upper-right of FontBBox
			"",									// Panose
			fw0::ms_pmincho,					// Widths
			fw0::ms_pmincho + 1000				// sizeof(Widths) / sizeof(int)
		);
		
		/* ----------------------------------------------------------------- */
		//  MS-UIGothic
		/* ----------------------------------------------------------------- */
		const font_property ms_uigothic(
			"MS-UIGothic",						// FontName
			0,									// Type
			14,									// Flags
			859,								// CapHeight
			859, -140,							// Ascent and Descent
			41,									// StemV
			0,									// ItalicAngle
			square(coordinate(-121, -137),		// loswer-left of FontBBox
				coordinate(996, 859)),			// upper-right of FontBBox
			"",									// Panose
			fw0::ms_uigothic,					// Widths
			fw0::ms_uigothic + 1000				// sizeof(Widths) / sizeof(int)
		);
		
		/* ----------------------------------------------------------------- */
		//  HGPGothicE
		/* ----------------------------------------------------------------- */
		const font_property hgp_gothic_e(
			"HGPGothicE",						// FontName
			0,									// Type
			14,									// Flags
			859,								// CapHeight
			859, -140,							// Ascent and Descent
			41,									// StemV
			0,									// ItalicAngle
			square(coordinate(0, -137),			// loswer-left of FontBBox
				coordinate(996, 863)),			// upper-right of FontBBox
			"",									// Panose
			fw0::hgp_gothic_e,					// Widths
			fw0::hgp_gothic_e + 1000			// sizeof(Widths) / sizeof(int)
		);
		
		/* ----------------------------------------------------------------- */
		//  HGPGothicM
		/* ----------------------------------------------------------------- */
		const font_property hgp_gothic_m(
			"HGPGothicM",						// FontName
			0,									// Type
			14,									// Flags
			859,								// CapHeight
			859, -140,							// Ascent and Descent
			41,									// StemV
			0,									// ItalicAngle
			square(coordinate(0, -137),			// loswer-left of FontBBox
				coordinate(996, 863)),			// upper-right of FontBBox
			"",									// Panose
			fw0::hgp_gothic_m,					// Widths
			fw0::hgp_gothic_m + 1000			// sizeof(Widths) / sizeof(int)
		);
		
		/* ----------------------------------------------------------------- */
		//  HGPSoeiKakugothicUB
		/* ----------------------------------------------------------------- */
		const font_property hgp_soeikaku_gothic_ub(
			"HGPSoeiKakugothicUB",				// FontName
			0,									// Type
			14,									// Flags
			859,								// CapHeight
			859, -140,							// Ascent and Descent
			41,									// StemV
			0,									// ItalicAngle
			square(coordinate(0, -137),			// loswer-left of FontBBox
				coordinate(996, 859)),			// upper-right of FontBBox
			"",									// Panose
			fw0::hgp_soeikaku_gothic_ub,		// Widths
			fw0::hgp_soeikaku_gothic_ub + 1010	// sizeof(Widths) / sizeof(int)
		);
		
		/* ----------------------------------------------------------------- */
		//  HGPSoeiKakupoptai
		/* ----------------------------------------------------------------- */
		const font_property hgp_soeikaku_pop(
			"HGPSoeiKakupoptai",				// FontName
			0,									// Type
			14,									// Flags
			859,								// CapHeight
			859, -140,							// Ascent and Descent
			41,									// StemV
			0,									// ItalicAngle
			square(coordinate(-4, -137),		// loswer-left of FontBBox
				coordinate(996, 867)),			// upper-right of FontBBox
			"",									// Panose
			fw0::hgp_soeikaku_pop,				// Widths
			fw0::hgp_soeikaku_pop + 1000		// sizeof(Widths) / sizeof(int)
		);
		
		/* ----------------------------------------------------------------- */
		//  HGSoeiPresenceEB
		/* ----------------------------------------------------------------- */
		const font_property hgp_soei_presence_eb(
			"HGSoeiPresenceEB",					// FontName
			0,									// Type
			14,									// Flags
			859,								// CapHeight
			859, -140,							// Ascent and Descent
			41,									// StemV
			0,									// ItalicAngle
			square(coordinate(0, -137),			// loswer-left of FontBBox
				coordinate(1000, 867)),			// upper-right of FontBBox
			"",									// Panose
			fw0::hgp_soei_presence_eb,			// Widths
			fw0::hgp_soei_presence_eb + 1000	// sizeof(Widths) / sizeof(int)
		);
		
		/* ----------------------------------------------------------------- */
		//  HGPGyoshotai
		/* ----------------------------------------------------------------- */
		const font_property hgp_gyosho(
			"HGPGyoshotai",						// FontName
			0,									// Type
			14,									// Flags
			859,								// CapHeight
			859, -140,							// Ascent and Descent
			41,									// StemV
			0,									// ItalicAngle
			square(coordinate(0, -137),		// loswer-left of FontBBox
				coordinate(996, 863)),			// upper-right of FontBBox
			"",									// Panose
			fw0::hgp_gyosho,					// Widths
			fw0::hgp_gyosho + 1000				// sizeof(Widths) / sizeof(int)
		);
		
		/* ----------------------------------------------------------------- */
		//  HGPMinchoB
		/* ----------------------------------------------------------------- */
		const font_property hgp_mincho_b(
			"HGPMinchoB",						// FontName
			0,									// Type
			14,									// Flags
			859,								// CapHeight
			859, -140,							// Ascent and Descent
			41,									// StemV
			0,									// ItalicAngle
			square(coordinate(-8, -137),		// loswer-left of FontBBox
				coordinate(996, 867)),			// upper-right of FontBBox
			"",									// Panose
			fw0::hgp_mincho_b,					// Widths
			fw0::hgp_mincho_b + 1000			// sizeof(Widths) / sizeof(int)
		);
		
		/* ----------------------------------------------------------------- */
		//  HGPMinchoE
		/* ----------------------------------------------------------------- */
		const font_property hgp_mincho_e(
			"HGPMinchoE",						// FontName
			0,									// Type
			14,									// Flags
			859,								// CapHeight
			859, -140,							// Ascent and Descent
			41,									// StemV
			0,									// ItalicAngle
			square(coordinate(-35, -137),		// loswer-left of FontBBox
				coordinate(996, 867)),			// upper-right of FontBBox
			"",									// Panose
			fw0::hgp_mincho_e,					// Widths
			fw0::hgp_mincho_e + 1000			// sizeof(Widths) / sizeof(int)
		);
		
		/* ----------------------------------------------------------------- */
		//  HGPKyokasyotai
		/* ----------------------------------------------------------------- */
		const font_property hgp_kyokasyo(
			"HGPKyokasyotai",					// FontName
			0,									// Type
			14,									// Flags
			859,								// CapHeight
			859, -140,							// Ascent and Descent
			41,									// StemV
			0,									// ItalicAngle
			square(coordinate(-8, -137),		// loswer-left of FontBBox
				coordinate(996, 863)),			// upper-right of FontBBox
			"",									// Panose
			fw0::hgp_kyokasyo,					// Widths
			fw0::hgp_kyokasyo + 1000				// sizeof(Widths) / sizeof(int)
		);
		
		/* ----------------------------------------------------------------- */
		//  HGMaruGothicMPRO
		/* ----------------------------------------------------------------- */
		const font_property hg_marugothic(
			"HGMaruGothicMPRO",					// FontName
			0,									// Type
			32,									// Flags
			859,								// CapHeight
			859, -141,							// Ascent and Descent
			50,									// StemV
			0,									// ItalicAngle
			square(coordinate(-121, -141),		// loswer-left of FontBBox
				coordinate(969, 859)),			// upper-right of FontBBox
			""									// Panose
		);
#endif // FAML_USE_WIN32_FONTS
		
		/* ----------------------------------------------------------------- */
		/*
		 *  font_instance
		 *
		 *  Maps font names to font properties.
		 */
		/* ----------------------------------------------------------------- */
		namespace font_instance {
			template <class Ch, class Tr>
			static std::map<std::basic_string<Ch, Tr>, font_property>& initialize() {
				static std::map<std::basic_string<Ch, Tr>, font_property> v;
				static bool done = false;
				if (done) return v;
				done = true;
				
				// default latin fonts.
				v[LITERAL("Courier")] = courier;
				v[LITERAL("Helvetica")] = helvetica;
				v[LITERAL("Times-Roman")] = times;
				
				// default japanese fonts.
				v[LITERAL("GothicBBB-Medium")] = gothic_bbb_medium;
				v[LITERAL("HeiseiKakuGo-W5")] = heisei_kakugo_w5;
				v[LITERAL("Ryumin-Light")] = ryumin_light;
				v[LITERAL("HeiseiMin-W3")] = heisei_min3;
				v[LITERAL("KozMin-Regular")] = kozmin_regular;
				
#ifdef FAML_USE_WIN32_FONTS
				// Microsoft latin fonts.
				v[LITERAL("Arial")] = arial;
				v[LITERAL("Arial Black")] = arial;
				v[LITERAL("Arial Unicode MS")] = arial;
				v[LITERAL("Courier New")] = courier;
				v[LITERAL("Times New Roman")] = times;
				v[LITERAL("Century")] = century;
				v[LITERAL("Calibri")] = calibri;
				v[LITERAL("Cambria")] = cambria;
				
				// Microsoft japanese fonts.
				v[LITERAL("ＭＳ ゴシック")] = ms_gothic;
				v[LITERAL("HGｺﾞｼｯｸE")] = ms_gothic; // 暫定
				v[LITERAL("HGSｺﾞｼｯｸE")] = ms_gothic; // 暫定
				v[LITERAL("HGｺﾞｼｯｸM")] = ms_gothic; // 暫定
				v[LITERAL("HGSｺﾞｼｯｸM")] = ms_gothic; // 暫定
				v[LITERAL("HG創英角ｺﾞｼｯｸUB")] = ms_gothic; // 暫定
				v[LITERAL("HGS創英角ｺﾞｼｯｸUB")] = ms_gothic; // 暫定
				v[LITERAL("HG創英角ﾎﾟｯﾌﾟ体")] = ms_gothic; // 暫定
				v[LITERAL("HGS創英角ﾎﾟｯﾌﾟ体")] = ms_gothic; // 暫定
				v[LITERAL("HG丸ｺﾞｼｯｸM-PRO")] = ms_gothic; // 暫定
				
				v[LITERAL("ＭＳ Ｐゴシック")] = ms_pgothic;
				v[LITERAL("MS UI Gothic")] = ms_uigothic;
				v[LITERAL("HGPｺﾞｼｯｸE")] = hgp_gothic_e;
				v[LITERAL("HGPｺﾞｼｯｸM")] = hgp_gothic_m;
				v[LITERAL("HGP創英角ｺﾞｼｯｸUB")] = hgp_soeikaku_gothic_ub;
				v[LITERAL("HGP創英角ﾎﾟｯﾌﾟ体")] = hgp_soeikaku_pop;
				
				v[LITERAL("ＭＳ 明朝")] = ms_mincho;
				v[LITERAL("HG明朝B")] = ms_mincho; // 暫定
				v[LITERAL("HGS明朝B")] = ms_mincho; // 暫定
				v[LITERAL("HG明朝E")] = ms_mincho; // 暫定
				v[LITERAL("HGS明朝E")] = ms_mincho; // 暫定
				v[LITERAL("HG教科書体")] = ms_mincho; // 暫定
				v[LITERAL("HGS教科書体")] = ms_mincho; // 暫定
				v[LITERAL("HG行書体")] = ms_mincho; // 暫定
				v[LITERAL("HGS行書体")] = ms_mincho; // 暫定
				v[LITERAL("HG創英ﾌﾟﾚｾﾞﾝｽEB")] = ms_mincho; // 暫定
				v[LITERAL("HGS創英ﾌﾟﾚｾﾞﾝｽEB")] = ms_mincho; // 暫定
				
				v[LITERAL("ＭＳ Ｐ明朝")] = ms_pmincho;
				v[LITERAL("HGP明朝B")] = hgp_mincho_b;
				v[LITERAL("HGP明朝E")] = hgp_mincho_e;
				v[LITERAL("HGP教科書体")] = hgp_kyokasyo;
				v[LITERAL("HGP行書体")] = hgp_gyosho;
				v[LITERAL("HGP創英ﾌﾟﾚｾﾞﾝｽEB")] = hgp_soei_presence_eb;
				
				v[LITERAL("HGMaruGothicMPRO")] = hg_marugothic;
				v[LITERAL("HG丸ｺﾞｼｯｸM-PRO")] = hg_marugothic;
#endif // FAML_USE_WIN32_FONTS
				
				return v;
			}
		}
		
		/* ----------------------------------------------------------------- */
		//  getfont
		/* ----------------------------------------------------------------- */
		template <class Ch, class Tr>
		inline font_property getfont(const std::basic_string<Ch, Tr>& name) {
			STATIC_CHECK(sizeof(Ch) == sizeof(char), currently_limited_to_char_type);
			typedef std::basic_string<Ch, Tr> string_type;
			typedef std::map<std::basic_string<Ch, Tr>, font_property> fprop_map;
			static fprop_map& v = font_instance::initialize<Ch, Tr>();
			
			string_type src(name);
			typename string_type::size_type pos = src.find(LITERAL("PS"));
			if (pos != string_type::npos) src.erase(pos);
			else {
				pos = name.find(LITERAL("MT"));
				if (pos != string_type::npos) src.erase(pos);
			}
			
			if (v.find(src) == v.end()) {
				clx::logger::warn(WARNF("%s is not found", src.c_str()));
#ifdef FAML_USE_WIN32_FONTS
				return v[LITERAL("ＭＳ Ｐゴシック")];
#else
				return v[LITERAL("HeiseiKakuGo-W5")];
#endif
			}
			return v[src];
		}
		
		template <class CharT>
		inline font_property getfont(const CharT* name) {
			std::basic_string<CharT> tmp(name);
			return getfont(tmp);
		}
	}
}

#endif // FAML_PDF_FONT_INSTANCE_H
